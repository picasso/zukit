@use "sass:color";
@use "instyle";
@use "variables";
@use "zukit-basic";

@use "components/select-item-control";
@use "components/list-input-control";
@use "components/adv-text-control";

@use "components/table";
@use "components/divider";

// class prefixes ---------------------------------------------------------------------------------]

$skeleton-class: zukit-skeleton;
$skeleton-editor-class: zukit-skeleton__editor;
$skeleton-content-class: zukit-skeleton__content;
$skeleton-sidebar-class: zukit-skeleton__sidebar;

// simple markdown --------------------------------------------------------------------------------]

%markdown_basic {
	letter-spacing: 0.5px;
	font-weight: 500;
	padding: 0 3px 1px;
	margin: 0 2px;
	border-radius: variables.$admin-border-radius;
}

%markdown_code {
	padding: 1px 5px;
	display: inline-block;
	color: color.adjust(zukit-basic.$admin-magenta-color, $lightness: -10%);
	background-color: rgba(zukit-basic.$admin-magenta-color, 0.08);
}

%markdown_em {
	color: color.adjust(variables.$wp-admin-blue-color, $lightness: -10%);
	background-color: rgba(variables.$wp-admin-blue-color, 0.1);
}

%markdown_strong {
	letter-spacing: 0.5px;
}

%markdown_green {
	color: color.adjust(variables.$green-color, $lightness: -10%);
	background-color: rgba(variables.$green-color, 0.1);
}

%markdown_red {
	color: color.adjust(variables.$red-color, $lightness: -10%);
	background-color: rgba(variables.$red-color, 0.1);
}

%markdown_red_on_red {
	color: color.adjust(variables.$red-color, $lightness: -30%);
	background-color: rgba(variables.$yellow-color, 0.2);
}

%markdown_gold {
	color: color.adjust(variables.$yellow-color, $lightness: -10%);
	background-color: rgba(variables.$yellow-color, 0.1);
}

.zukit-settings {

	font-family: zukit-basic.$basic-font-family;

	#wpfooter, #update-nag, .update-nag {
		display: none;
	}

	.interface-interface-skeleton__body,
	.block-editor-editor-skeleton__body {
		padding: 0;
	}
	.interface-interface-skeleton__sidebar > div,
	.block-editor-editor-skeleton__sidebar > div {
	    height: auto;
	}

	// when WP == 5.4 -----------------------------------------------------------------------------]

	.wp_5_4 {
		&.block-editor-editor-skeleton {
			.block-editor-block-list__layout {
				padding: 0;
				.block-editor-block-list__block {
					margin: 0 auto;
				}
			}
			.components-range-control__number {
				width: auto;
			}
		}
	}

	// when WP version < 5.4 ----------------------------------------------------------------------]

	.wp_less_5_4 {
		&.block-editor-editor-skeleton {
		    padding: 0;
		    left: -20px;
		    width: calc(100% + 20px);
			.block-editor-editor-skeleton__body {
			    height: 100%;
				.block-editor-editor-skeleton__content {
				    min-height: 100%;
				    width: calc(100% - 280px);
					.block-editor-block-list__layout {
					    padding: 28px 0;
						.block-editor-block-list__block {
						    padding: 0 !important;
						    margin: 0 auto;
						}
					}
					@include variables.breakpoint-width(LESS_SETTINGS_SIDEBAR_BREAK) {
						width: 100%;
					}
				}
				.block-editor-editor-skeleton__sidebar {
					.edit-post-sidebar {
					    top: 32px;
					}
					.block-editor-block-inspector .block-editor-block-card {
					    padding: 16px;
					}
				}
			}
			.components-button.__plugin_actions {
			    min-height: 36px;
			    padding: 6px;
			    padding-left: 12px;
			    border-radius: 2px;
			}
			.components-range-control__slider {
				z-index: 0;
			}
			.components-range-control__number {
				width: auto;
			}
		}
	}

	// when WP == 5.9 -----------------------------------------------------------------------------]
	// они забыли, что-ли? может сами исправят в следующей версии?
	.wp_5_9 {
		.components-visually-hidden {
		  border: 0;
		  clip: rect(1px, 1px, 1px, 1px);
		  clip-path: inset(50%);
		  height: 1px;
		  margin: -1px;
		  overflow: hidden;
		  padding: 0;
		  position: absolute;
		  width: 1px;
		  word-wrap: normal !important;
		}
	}

	// fix styles of standard controls that I do not like -----------------------------------------]

	.components-checkbox-control {
		.components-checkbox-control__input {
			border-radius: 4px;
			opacity: 0.8;
		}
		.components-checkbox-control__checked {
			width: 20px;
			height: 20px;
			left: 0;
			top: 0;
		}
	}

	.__sidebyside {
		width: 100%;
		display: flex;
		align-items: center;
		justify-content: space-between;
		column-gap: 1em;
		.components-base-control__label {
			font-weight: 500;
			margin: 0 0 8px;
		}
		.components-base-control__help.components-base-control__help {
			margin-bottom: 8px !important;
		}
		@include variables.breakpoint-width(LESS_SETTINGS_BREAK) {
			flex-direction: column;
			align-items: flex-start;
			.components-base-control__label {
				margin: 0 0 2px;
			}
		}
	}

	// Zukit Settings Page ------------------------------------------------------------------------]

	.#{$skeleton-class} {
	    background-color: white;

		// Settings Main Screen -------------------------------------------------------------------]

		.#{$skeleton-content-class} {
			background-color: zukit-basic.$page-basic-color;
			.components-editor-notices__dismissible {
				z-index: 29;
				.components-notice__content div {
					display: inline-block;
				}
				.components-notice__dismiss {
					transition: background-color variables.$transition-time variables.$transition-function,
								border-color variables.$transition-time variables.$transition-function;
					border-radius: 5px;
					border: 1px solid transparent;
					&:hover {
						background-color: white;
						border-color: rgba(black, 0.2);
					}
				}
				// I just don't like notifications with a white background
				.is-info {
					background-color: rgba(variables.$blue-color, 0.1);
				}
				.is-warning {
					background-color: rgba(variables.$yellow-color, 0.1);
				}

				.__code {
					@extend %markdown_basic;
					@extend %markdown_code;
				}
				strong {
					@extend %markdown_strong;
				}
				em {
					@extend %markdown_basic;
					@extend %markdown_em;
					font-style: normal;
					@include instyle.in('^.is-success') { @extend %markdown_green; }
					@include instyle.in('^.is-error') { @extend %markdown_red_on_red; }
					@include instyle.in('^.is-warning') { @extend %markdown_gold; }
				}
				.zukit-data {
					height: auto;
					margin-left: 10px;
					padding: 3px 6px;
					border-width: 0;
					background-color: zukit-basic.$admin-error-bg-color;
					color: zukit-basic.$admin-error-color;
					pointer-events: none;
					cursor: default;
					font-weight: 400;
				}
			}

			.#{$skeleton-editor-class} {
				background-color: transparent;
				position: relative;
				padding-top: 50px;
				flex: 1 1 auto;
				@supports ((position: -webkit-sticky) or (position: sticky)) {
				      flex-basis: 100%;
				}
				&.editor-styles-wrapper {
					font-family: inherit;
					font-size: inherit;
					line-height: inherit;
					ul, ol {
					    margin: inherit;
					    padding: inherit;
					    list-style-type: none;
					    box-sizing: inherit;
						li {
							margin-bottom: 6px;
						}
					}
					select {
						font-family: inherit;
					}
				}
			}

			.block-editor-block-list__block {
				background-color: zukit-basic.$settings-color;
				max-width: variables.$settings-max-width;
				border: 1px solid zukit-basic.$settings-border-color;
				border-top-width: 0;
				border-bottom-width: 0;
				box-shadow: 0 1px 1px rgba(black, 0.04);
				margin: 28px auto;
			}

			.components-panel__body-title .components-button {
				font-size: zukit-basic.$panel-title-font-size;
				font-weight: zukit-basic.$panel-title-font-weight;
			}

			.components-base-control,
				.components-button:not(.zukit-select-item__button):not(.__plugin_actions):not(.__exclude):not(.components-panel__body-toggle) {
				font-size: zukit-basic.$basic-font-size !important;
				line-height: zukit-basic.$basic-line-height !important;
				color: variables.$admin-grey-blue-color;
			}

			.components-base-control .components-toggle-control__label {
				min-width: zukit-basic.$settings-left-width;
			}

			h2, h3, h4, h5, h6 {
				&.__subtitle {
					font-size: zukit-basic.$basic-font-size;
					font-weight: 600;
					color: zukit-basic.$admin-darker-brown;
				}
			}
			.__subtitle {
				.components-panel__body-toggle {
					font-size: zukit-basic.$basic-font-size;
					font-weight: 600;
					color: zukit-basic.$admin-darker-brown;
				}
			}

			.editor-post-title {
				background-color: rgba(variables.$admin-grey-blue-color, 0.3);
				box-shadow: 0 0 2px rgba(black, 0.3) inset;
				padding: 0 48px;
				.editor-post-title__block {
					padding: 15px 0;
					margin: 0 auto;
					display: flex;
					align-items: center;
					justify-content: space-between;
					max-width: none;
					h1 {
						font-size: zukit-basic.$plugin-title-size;
						font-family: zukit-basic.$plugin-font-family;
					}
					.block-editor-block-icon {
						width: zukit-basic.$plugin-icon-width;
						height: zukit-basic.$plugin-icon-height;
						svg {
							max-width: zukit-basic.$plugin-icon-width;
							max-height: zukit-basic.$plugin-icon-height;
							height: zukit-basic.$plugin-icon-height;
						}
					}
				}
			}

			.__note {
				padding: 1em;
				line-height: 1.7;
				border: 1px solid zukit-basic.$admin-gold-color;
				border-radius: 5px;
				margin-bottom: 2em;
				background-color: rgba(zukit-basic.$admin-gold-color, 0.2);
				.__code {
					@extend %markdown_basic;
					@extend %markdown_code;
					background-color: rgba(zukit-basic.$admin-gold-color, 0.2);
					@include instyle.in('^.is-green') { @extend %markdown_green; }
					@include instyle.in('^.is-red') { @extend %markdown_red; }
					@include instyle.in('^.is-gold') { @extend %markdown_gold; }
				}
				strong {
					@extend %markdown_strong;
				}
				em {
					@extend %markdown_basic;
					@extend %markdown_em;
					background-color: transparent;
					margin: 0;
					padding: 0 1px;
					color: variables.$brown-color;
				}
			}

			.editor-post-title + .__note {
				display: inline-block;
				margin: zukit-basic.$main-note-margin;
				width: calc(100% - #{(zukit-basic.$main-note-margin * 2) + zukit-basic.$main-note-margin});
			}

			.__select_label {
				display: block;
				margin-bottom: 4px;
			}

			.__block_label {
				label {
					display: block;
					margin-bottom: 4px;
				}
			}

			.__select_block {
				display: flex;
				justify-content: space-between;
				@include variables.breakpoint-width(LESS_SETTINGS_BREAK) {
					flex-direction: column;
				}
			}

			.__select_control {
				display: flex;
				justify-content: flex-start;
				align-items: center;
				margin-bottom: 8px;
				min-width: zukit-basic.$settings-left-min-width;
				.components-base-control__field {
					margin-bottom: 0;
				}
				.__reset {
					margin-left: 12px;
					max-height: 30px;
					min-width: 36px;
				}
			}

			.components-base-control__help {
				margin: 0 0 1em 1em;
				color: zukit-basic.$toggle-help-color;
				font-size: 13px;
				letter-spacing: 0.5px;
				text-align: right;
				@include variables.breakpoint-width(LESS_SETTINGS_BREAK) {
					margin-left: 0;
					text-align: left;
				}
			}

			// markdown css in help elements
			.components-base-control__help {
				.__code {
					@extend %markdown_basic;
					@extend %markdown_code;
					@include instyle.in('^.is-green') { @extend %markdown_green; }
					@include instyle.in('^.is-red') { @extend %markdown_red; }
					@include instyle.in('^.is-gold') { @extend %markdown_gold; }
				}
				strong {
					@extend %markdown_strong;
				}
				em {
					@extend %markdown_basic;
					@extend %markdown_em;
				}
			}

			.components-toggle-control {
				display: flex;
				align-items: flex-start;
				justify-content: space-between;
				.components-base-control__field {
					margin: 0 0 1em;
				}

				& + .components-toggle-control {
					margin-bottom: 0;
				}

				@include variables.breakpoint-width(LESS_SETTINGS_BREAK) {
					flex-direction: column;
					.components-base-control__field {
						margin-bottom: 0.5em;
					}
				}
			}

			.components-range-control {
				display: flex;
				align-items: flex-start;
				justify-content: space-between;
				.components-base-control__field {
					min-width: zukit-basic.$settings-left-min-width;
				}
				.components-base-control__help {
					margin-top: 27px;
				}
			}
		}

		// Settings Sidebar -----------------------------------------------------------------------]

		.#{$skeleton-sidebar-class} {
			background-color: zukit-basic.$sidebar-color;

			.block-editor-block-card__title, .components-panel__body-toggle {
				font-weight: 600;
			}
			.block-editor-block-card__title {
				margin-left: 0.5em;
				margin-bottom: 0.5em;
				font-size: zukit-basic.$basic-font-size;
			}

			.block-editor-block-card__description {
				color: zukit-basic.$admin-darker-brown;
				.__code {
					color: zukit-basic.$admin-dark-brown;
					background-color: rgba(zukit-basic.$admin-light-brown, 0.2);
				}
			}
			.__plugin_info {
				.__code {
					color: variables.$wp-admin-blue-color;
					background-color: rgba(variables.$wp-admin-blue-color, 0.15);
				}
			}

			.block-editor-block-card .block-editor-block-icon svg {
				width: zukit-basic.$settings-sidebar-icon-size;
				height: zukit-basic.$settings-sidebar-icon-size;
				max-width: zukit-basic.$settings-sidebar-icon-size;
				max-height: zukit-basic.$settings-sidebar-icon-size;
			}

			.components-panel__body.is-opened {
				.components-panel__body-title + div {
					margin-top: 12px;
				}
			}

			@include variables.breakpoint-width(LESS_SETTINGS_SIDEBAR_BREAK) {
				display: none;
			}
		}

		// Settings Common Rules ------------------------------------------------------------------]

		.zukit-toggle {
			.components-form-toggle {
				opacity: 0.8;
				&:not(.is-checked) {
					.components-form-toggle__track {
						border-color: rgba(variables.$wp-admin-blue-color, 0.8);
					}
				}
			}
			.components-toggle-control__label {
				.__code {
					display: inline;
					letter-spacing: normal;
					margin: 0;
					padding: 0 3px;
					color: color.adjust(variables.$wp-admin-blue-color, $lightness: -10%);
					background-color: rgba(variables.$wp-admin-blue-color, 0.05);
				}
			}
		}

		// flex blocks
		.__flex {
			display: flex;
			align-items: center;
			justify-content: flex-start;
			& > * { margin-right: 1em; }
			&.__right {
				justify-content: flex-end;
				& > * {
					margin-left: 1em;
					margin-right: 0;
				}
			}
			&.__side {
				justify-content: space-between;
				& > * { margin: 0; }
			}
		}

		// simple markdown css
		.__zu_markdown {
			.__code {
				@extend %markdown_basic;
				@extend %markdown_code;
				@include instyle.in('^.is-green') { @extend %markdown_green; }
				@include instyle.in('^.is-red') { @extend %markdown_red; }
				@include instyle.in('^.is-gold') { @extend %markdown_gold; }
			}
			strong {
				@extend %markdown_strong;
			}
			em {
				@extend %markdown_basic;
				@extend %markdown_em;
			}
		}

		.components-button:not(.zukit-select-item__button) {
			&.__plugin_actions {
				position: relative;
			    width: 100%;
			    color: white;
				font-size: zukit-basic.$basic-font-size;
			    font-weight: 600;
				transition: background-color variables.$transition-time variables.$transition-function;
				box-shadow: 0px 0px 0px 1px rgba(black, 0.2) inset;

				background-color: zukit-basic.$admin-blue-color;
				border-color: color.adjust(zukit-basic.$admin-blue-color, $lightness: -(zukit-basic.$hover-shadow) * 1%) !important;
				&:not(.is-loading):hover:enabled {
					background-color: color.adjust(zukit-basic.$admin-blue-color, $lightness: -(zukit-basic.$hover-darken) * 1%);
					color: #fff !important;
				}
				&:not(.is-loading):active:enabled {
					background-color: color.adjust(zukit-basic.$admin-blue-color, $lightness: -(zukit-basic.$hover-shadow) * 1%);
					color: #fff !important;
				}
				&.is-loading {
					color: rgba(white, 0.5);
					pointer-events: none;
				}
				&.__auto {
					width: auto;
					padding-right: 12px;
				}
				.components-spinner {
					position: absolute;
					right: 0;
					top: 50%;
					transform: translate(0, -50%);
					margin: 0 8px;
					background-color: rgba(white, 0.5);
				}
				span.dashicons {
					margin-right: 8px;
				}

				@each $color-name, $color-value in zukit-basic.$admin-colors {
					&.#{$color-name} {
						background-color: $color-value;
						border-color: color.adjust($color-value, $lightness: -(zukit-basic.$hover-shadow) * 1%) !important;
			            &:hover:enabled {
			                background-color: color.adjust($color-value, $lightness: -(zukit-basic.$hover-darken) * 1%);
			            }
						&:active:enabled {
							background-color: color.adjust($color-value, $lightness: -(zukit-basic.$hover-shadow) * 1%);
						}
					}
				}
			}
		}

		.__help {
			padding-top: 5px;
			padding: 5px 10px;
			border-radius: 0 0 zukit-basic.$help-border-radius zukit-basic.$help-border-radius;
			margin-top: -1px;
			@each $color-name, $color-value in zukit-basic.$admin-colors {
				&.#{$color-name} {
		            background-color: rgba($color-value, zukit-basic.$help-color-opacity);
					.__code {
						background-color: rgba($color-value, zukit-basic.$help-code-color-opacity);
						max-height: 17px;
						padding: 0 3px;
					}
				}
			}
		}
		
	} // end of skeleton --------------------------------------------------------------------------]

	// Components ---------------------------------------------------------------------------------]

	.zukit-select-item {
		.dashicons{
			width: 100%;
			height: 100%;
			font-size: zukit-basic.$select-item-size;
		}
	}
}

// NOTE: Не удалить ли???

.zukit_red { color: zukit-basic.$admin-red-color;}
.zukit_green { color: zukit-basic.$admin-green-color;}
.zukit_magenta { color: zukit-basic.$admin-magenta-color;}
.zukit_gold { color: zukit-basic.$admin-gold-color;}
.zukit_blue { color: zukit-basic.$admin-blue-color;}

.zukit_bold { font-weight: 600; letter-spacing: 0.5pt;}
.zukit_grand { font-weight: 600; font-size: 110%; letter-spacing: 1pt; text-transform: uppercase;}
.zukit_uppercase { text-transform: uppercase; font-size: 0.8em;}
.zukit_uppercase2 { font-weight: 500; text-transform: uppercase; letter-spacing: 0.5pt;}
.zukit_shift { margin-left: 1.5em;}
